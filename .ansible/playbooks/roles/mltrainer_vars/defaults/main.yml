---
cops_mltrainer_name: mltrainerinstance
cops_mltrainer_project_module_name: "{{cops_mltrainer_name}}"
cops_mltrainer_project_dir: "./src/{{cops_mltrainer_project_module_name.replace('.', '/')}}"
cops_mltrainer_py_ver: "3.8"
cops_mltrainer_default_deploy_env: "dev"
cops_mltrainer_default_docker_tag: "latest"
cops_mltrainer_default_gitref: "master"
cops_mltrainer_branch_envs: {}
cops_mltrainer_deploy_env: "{{ (
  cops_mltrainer_gitref in [cops_mltrainer_default_gitref, cops_mltrainer_default_docker_tag]
    and cops_mltrainer_default_deploy_env
    or  cops_mltrainer_branch_envs.get(cops_mltrainer_gitref, cops_mltrainer_gitref))}}"
cops_mltrainer_docker_tag: "{{cops_mltrainer_gitref.replace('master', cops_mltrainer_default_docker_tag)}}"
cops_mltrainer_docker_image_tag: "{{cops_mltrainer_name}}"
cops_mltrainer_tld_domain: example.com
cops_mltrainer_gitref: "{{cops_mltrainer_default_gitref}}"
cops_mltrainer_dir: "/srv/docker/{{cops_mltrainer_name}}"
cops_mltrainer_hostname: "{{cops_mltrainer_deploy_env}}-{{cops_mltrainer_name}}.{{cops_mltrainer_tld_domain}}"
cops_mltrainer_alternate_hostnames: [".{{cops_mltrainer_tld_domain}}"]
cops_mltrainer_gateway: "{{ ansible_default_ipv4.address}}"
cops_mltrainer_composename: "{{(ansible_connection|default('ssh') in ['local'] and
  (teleport_wd|copsf_basename) or
  cops_mltrainer_name)}}"
cops_mltrainer_servicename: "{{cops_mltrainer_composename}}"
#
cops_mltrainer_db_name: "{{cops_mltrainer_name}}"
cops_mltrainer_devmode: False
cops_mltrainer_build_args: "--no-cache mltrainer"
# backup could be remove in a-while when we have redeployed it everywhere
cops_mltrainer_restarted_services_default: ""
cops_mltrainer_restarted_services: "{{cops_mltrainer_restarted_services_default}}"
cops_mltrainer_purge_volumes: [statics]
cops_mltrainer_medias_owner: "1000"
cops_mltrainer_medias_group: "1000"
cops_mltrainer_force_sync_ssh_user: null
cops_mltrainer_sync_ssh_user: ""
cops_mltrainer_sshargs: >-
  {% set k = hostvars[inventory_hostname].get(
                'ansible_ssh_private_key_file', '') %}
  {% if k%}-o IdentityFile={{k}} -o IdentitiesOnly=yes{%endif%}
  {% if (
      hostvars[inventory_hostname].ansible_connection|default('ssh')
     ) not in [ 'smart', 'local'] %}
  {{ hostvars[inventory_hostname].ssh_args | default('') }}
  {{ hostvars[inventory_hostname].ansible_ssh_args | default('') }}
  {{ hostvars[inventory_hostname].ansible_ssh_common_args | default('') }}
  {{ hostvars[inventory_hostname].ansible_ssh_extra_args | default('') }}
  {% endif %}
  {% if((cops_mltrainer_force_sync_ssh_user) or
        (cops_mltrainer_sync_ssh_user and (cops_mltrainer_force_sync_ssh_user == True))
    )%}
  {% set user = cops_mltrainer_sync_ssh_user or ansible_user or '' %}
  {% if user %}-l {{user}}{% endif %}
  {% endif %}
cops_mltrainer_build: false
cops_mltrainer_pull: true
cops_mltrainer_registries: []
#- {registry: registry.foo.net, username: foo, password: bar}
cops_mltrainer_compose_files_prod: [docker-compose.yml, docker-compose-prod.yml]
cops_mltrainer_compose_files_dev: [docker-compose.yml, docker-compose-dev.yml]
cops_mltrainer_compose_files: "{{(ansible_connection|default('ssh') in ['local'] and
  cops_mltrainer_compose_files_dev or cops_mltrainer_compose_files_prod)}}"
cops_mltrainer_dc:
  docker-compose {% for i in cops_mltrainer_compose_files %} -f {{i}}{% endfor %}
  -p "{{cops_mltrainer_composename}}"
cops_mltrainer_default_from_email: noreply@{{cops_mltrainer_hostname}}
cops_mltrainer_server_email: "{{cops_mltrainer_default_from_email}}"
cops_mltrainer_sentry_tags: ["env:{{cops_mltrainer_deploy_env}}"]
cops_mltrainer_sentry_dsn: ''
cops_mltrainer_docker_env_freeform: |-
  {{ cops_mltrainer_docker_env_defaults}}
  {{ cops_mltrainer_docker_env_extra}}
cops_mltrainer_docker_env_defaults: ""
# free form for params inside dockerenv
cops_mltrainer_dotenv_defaults: |-
  # cors
  {% if cops_mltrainer_devmode %}
  MLTRAINER__DEBUG=y
  {% endif %}
  {% if cops_mltrainer_sentry_dsn %}
  MLTRAINER__SENTRY_DSN={{cops_mltrainer_sentry_dsn}}
  MLTRAINER__SENTRY_RELEASE={{cops_mltrainer_docker_tag}}
  MLTRAINER__SENTRY_TAGS={{cops_mltrainer_sentry_tags|join(',')}}
  {% endif %}
  # gunicorn
  GUNICORN_CLASS={{cops_mltrainer_gunicorn_class}}
  GUNICORN_EXTRA_ARGS={{cops_mltrainer_gunicorn_extra_args}}
  APP_TYPE=mltrainer
  MLTRAINER_PY_VER={{ cops_mltrainer_py_ver }}
  MLTRAINER_NAME={{ cops_mltrainer_name }}
  COMPOSE_PROJECT_NAME={{cops_mltrainer_composename}}
  CI_COMMIT_SHA={{cops_mltrainer_gitref}}
  MLTRAINER_IMAGE={{ cops_mltrainer_docker_image }}
  MLTRAINER_IMAGE_VERSION={{cops_mltrainer_docker_tag}}
  CONTROL_COMPOSE_FILES={{cops_mltrainer_compose_files|join(' ')}}
cops_mltrainer_dotenv: |
  {{cops_mltrainer_dotenv_defaults}}
  {{cops_mltrainer_dotenv_extra}}
# free form for params inside dockerenv
cops_mltrainer_docker_env_extra: ""
# free form for params inside local.py
cops_mltrainer_localpy_extra: ""
# Normally playbook is in ./.ansible/playbooks
cops_mltrainer_code_dir: "{{playbook_dir}}/../.."
cops_mltrainer_theme_rsync_opts: ["-azv", "--delete"]
cops_mltrainer_code_rsync_opts: [
    "-azv",
    # include deploy projects base code
    "--include", "local/*-deploy",
    "--exclude", ".ansible",
    "--exclude", "local/*",
    "--exclude", ".tox",
    "--exclude", ".env",
    "--exclude", "docker.env"]
cops_mltrainer_backup_postgresql: "{{'5432' == '{0}'.format(cops_mltrainer_db_port)}}"
cops_mltrainer_backup_paths_to_backup:
- "{{cops_mltrainer_dir}}"
cops_mltrainer_backup_docker_volumes: []
cops_mltrainer_backup_docker_volumes_: |-
  {% set res = [] %}
  {% for i in cops_mltrainer_backup_docker_volumes %}
  {% set  _ = res.append('_'.join([cops_mltrainer_composename, i])) %}
  {% endfor %}
  {{ res | to_json }}
cops_mltrainer_backup_pgdump_urls:
- name: "{{cops_mltrainer_db_name}}"
  url: "postgres://{{
      cops_mltrainer_db_user}}:{{cops_mltrainer_db_password}}@{{
        cops_mltrainer_db_host}}:{{cops_mltrainer_db_port}}/{{
          cops_mltrainer_db_name}}"
  docker_dir: "{{cops_mltrainer_dir}}"
  docker_service: backup
  docker_compose: "{{cops_mltrainer_dc}}"
cops_mltrainer_drun_extra_args: "--entrypoint /init.sh"
cops_mltrainer_drun:
  COMPOSE_INTERACTIVE_NO_CLI= {{teleport_dc}}
  run -e SHELL_USER=mltrainer --no-deps
  --rm {{cops_mltrainer_drun_extra_args}} {{teleport_app_container}}
